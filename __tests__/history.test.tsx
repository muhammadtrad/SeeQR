import * as React from "react";
import { shallow } from "enzyme";
import { History } from "../frontend/components/leftPanel/History";


test("History table changes after query is submitted", () => {
    const currentSchema = 'defaultDB';
    const mockData1 = {"queries":[{"queryString":"SELECT * FROM users;","queryData":[{"_id":"1","email":"cc2368@cornell.edu","firstName":"Catherine","lastName":"Chiu","password":"helloworld","points":"500","address_id":"1"},{"_id":"2","email":"jm@gmail.com","firstName":"John","lastName":"Madrigal","password":"helloworld","points":"500","address_id":"2"},{"_id":"3","email":"mh@gmail.com","firstName":"Michelle","lastName":"Holland","password":"helloworld","points":"500","address_id":"3"},{"_id":"4","email":"sk@gmail.com","firstName":"Serena","lastName":"Kuo","password":"helloworld","points":"500","address_id":"4"}],"queryStatistics":[{"QUERY PLAN":[{"Plan":{"Node Type":"Seq Scan","Parallel Aware":false,"Relation Name":"users","Alias":"users","Startup Cost":0,"Total Cost":12.3,"Plan Rows":230,"Plan Width":316,"Actual Startup Time":0.007,"Actual Total Time":0.008,"Actual Rows":4,"Actual Loops":1},"Planning Time":0.053,"Triggers":[],"Execution Time":0.02}]}],"querySchema":"postgres_create","queryLabel":"Testing"}],"currentSchema":"postgres_create"};
    const mockData2 = {"queries":[{"queryString":"SELECT * FROM users;","queryData":[{"_id":"1","email":"cc2368@cornell.edu","firstName":"Catherine","lastName":"Chiu","password":"helloworld","points":"500","address_id":"1"},{"_id":"2","email":"jm@gmail.com","firstName":"John","lastName":"Madrigal","password":"helloworld","points":"500","address_id":"2"},{"_id":"3","email":"mh@gmail.com","firstName":"Michelle","lastName":"Holland","password":"helloworld","points":"500","address_id":"3"},{"_id":"4","email":"sk@gmail.com","firstName":"Serena","lastName":"Kuo","password":"helloworld","points":"500","address_id":"4"}],"queryStatistics":[{"QUERY PLAN":[{"Plan":{"Node Type":"Seq Scan","Parallel Aware":false,"Relation Name":"users","Alias":"users","Startup Cost":0,"Total Cost":12.3,"Plan Rows":230,"Plan Width":316,"Actual Startup Time":0.006,"Actual Total Time":0.007,"Actual Rows":4,"Actual Loops":1},"Planning Time":0.046,"Triggers":[],"Execution Time":0.024}]}],"querySchema":"sdasds","queryLabel":"Testing"},{"queryString":"SELECT * FROM users;","queryData":[{"_id":"1","email":"cc2368@cornell.edu","firstName":"Catherine","lastName":"Chiu","password":"helloworld","points":"500","address_id":"1"},{"_id":"2","email":"jm@gmail.com","firstName":"John","lastName":"Madrigal","password":"helloworld","points":"500","address_id":"2"},{"_id":"3","email":"mh@gmail.com","firstName":"Michelle","lastName":"Holland","password":"helloworld","points":"500","address_id":"3"},{"_id":"4","email":"sk@gmail.com","firstName":"Serena","lastName":"Kuo","password":"helloworld","points":"500","address_id":"4"}],"queryStatistics":[{"QUERY PLAN":[{"Plan":{"Node Type":"Seq Scan","Parallel Aware":false,"Relation Name":"users","Alias":"users","Startup Cost":0,"Total Cost":12.3,"Plan Rows":230,"Plan Width":316,"Actual Startup Time":0.008,"Actual Total Time":0.01,"Actual Rows":4,"Actual Loops":1},"Planning Time":0.06,"Triggers":[],"Execution Time":0.026}]}],"querySchema":"sdasds","queryLabel":"Testing2"}],"currentSchema":"sdasds"};
    const history1 = shallow(<History currentSchema = {currentSchema} queries = {mockData1.queries}/>);
    expect(history1.find("tr")).toHaveLength(2);
    const history2 = shallow(<History currentSchema = {currentSchema} queries = {mockData2.queries}/>);
    expect(history2.find("tr")).toHaveLength(3);
});

